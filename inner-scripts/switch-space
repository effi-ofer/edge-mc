#!/usr/bin/env bash
# Copyright 2023 The KubeStellar Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Usage: $0 (init or start or stop | -v)

# Purpose: switch to a given space by setting the appropriate kubeconfig

# Assumption: space manager is running

# Requirements:

set -e

function echoerr() {
   echo "ERROR: $1" >&2
}

while (( $# > 0 )); do
    case "$1" in
    (--space-name)
        if (( $# > 1 ));
        then { SPACE_NAME="$2"; shift; }
        else { echo "$0: missing space name" >&2; exit 1; }
        fi;;
    (--config)
        if (( $# > 1 ));
        then { SPACE_KUBECONFIG="$2"; shift; }
        else { echo "$0: missing config path" >&2; exit 1; }
        fi;;
    (--provider-namespace)
        if (( $# > 1 ));
        then { PROVIDER_NAMESPACE="$2"; shift; }
        else { echo "$0: missing provider namespace" >&2; exit 1; }
        fi;;
    (-h|--help)
        echo "Usage: $0 --space-name <space name> --provider-namespace <provider namespace> --config <path to target kubeconfig>"
        exit 0;;
    (-*)
        echo "$0: unknown flag" >&2 ; exit 1;
        exit 1;;
    (*)
        echo "$0: unknown positional argument" >&2; exit 1;
        exit 1;;
    esac
    shift
done
echo "SPACE_NAME=${SPACE_NAME}"
echo "PROVIDER_NAMESPACE=${PROVIDER_NAMESPACE}"

KUBECONFIG=
SECRET_NAME=`kubectl get space ${SPACE_NAME} -n ${PROVIDER_NAMESPACE} -o jsonpath='{$.status.inClusterSecretRef.name}'`
SECRET_NAMESPACE=`kubectl get space ${SPACE_NAME} -n ${PROVIDER_NAMESPACE} -o jsonpath='{$.status.inClusterSecretRef.namespace}'`
echo "SECRET_NAME=${SECRET_NAME}"
echo "SECRET_NAMESPACE=${SECRET_NAMESPACE}"
kubectl get secret ${SECRET_NAME} -n ${SECRET_NAMESPACE} -o jsonpath='{$.data.kubeconfig}' | base64 -d > $SPACE_KUBECONFIG

